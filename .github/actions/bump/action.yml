name: Bump and Tag
description: "Bump Version and Create Tag"
inputs:
  version:
    description: "The next version to set"
  post_version:
    description: "The post version to set"
  app_id:
    description: "The app id of the bot"
  private_key:
    description: "The private key of the bot"
  garasign_username:
    description: "The garasign username"
  garasign_password:
    description: "The garasign password"
  artifactory_username:
    description: "The artifactory username"
  artifactory_password:
    description: "The artifactory password"
  gpg_key_id:
    description: "The gpg key id"
  dry_run:
    description: "Whether this is a dry run"

runs:
  using: composite
  steps:
  - uses: actions/create-github-app-token@v1
    id: app-token
    with:
      app-id: ${{ inputs.app_id }}
      private-key: ${{ inputs.app_private_key }}

  - uses: actions/checkout@v4
    with:
      token: ${{ steps.app-token.outputs.token }}

  - uses: actions/setup-python@v4
    with:
      python-version: '3.11'

  - name: Set up Git Config
    shell: bash
    run: |
      # Use the GitHub Actions bot as the actor.
      git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      git config user.name "github-actions[bot]"

  - name: Set up new version
    shell: bash
    run: |
      export CURRENT_VERSION=$(python setup.py --version)
      export NEW_VERSION=${{inputs.version}}
      sed -i "s/version = \"${CURRENT_VERSION}\"/version = \"${NEW_VERSION}\"/" pyproject.toml
      git add .

  - name: Commit the new version
    uses: mongodb-labs/drivers-github-tools/garasign/git-sign@main
    with:
      command: git commit -a -m "BUMP ${{ inputs.version }}" -s --gpg-sign=${{ inputs.gpg_key_id }}
      garasign_username: ${{ inputs.garasign_username }}
      garasign_password: ${{ inputs.garasign_password }}
      artifactory_username: ${{ inputs.art_user }}
      artifactory_password: ${{ inputs.art_password }}

  - name: Tag the new version
    uses: mongodb-labs/drivers-github-tools/garasign/git-sign@main
    with:
      command: git tag -a "${{ inputs.version }}" -m "BUMP ${{ inputs.version }}" -s --local-user=${{ inputs.gpg_key_id }}
      garasign_username: ${{ inputs.garasign_username }}
      garasign_password: ${{ inputs.garasign_password }}
      artifactory_username: ${{ inputs.artifactory_user }}
      artifactory_password: ${{ inputs.artifactory_password }}
      skip_setup: true

  - name: Set up the post version
    shell: bash
    run: |
      export CURRENT_VERSION=${{ inputs.version }}
      export NEW_VERSION=${{ inputs.post_verion }}
      sed -i "s/version = \"${CURRENT_VERSION}\"/version = \"${NEW_VERSION}\"/" pyproject.toml
      git add .

  - name: Commit the post version
    uses: mongodb-labs/drivers-github-tools/garasign/git-sign@main
    with:
      command: git commit -a -m "BUMP ${{ inputs.post_verion }}" -s --gpg-sign=${{ inputs.gpg_key_id }}"
      garasign_username: ${{ inputs.garasign_username }}
      garasign_password: ${{ inputs.garasign_password }}
      artifactory_username: ${{ inputs.artifactory_user }}
      artifactory_password: ${{ inputs.artifactory_password }}
      skip_setup: true

  - name: Verify the tag
    shell: bash
    run: |
      curl -O https://pgp.mongodb.com/python-driver.pub
      gpg --import python-driver.pub
      git verify-tag ${{inputs.version}}
      rm python-driver.pub

  - name: Push the version and tags to the source branch
    shell: bash
    run: |
      if [ -n "$(git status --porcelain)" ]; then
        echo "Uncommitted changes!"
        git status --porcelain
        exit 1
      fi
      if [ ${{ inputs.dry_run }} != "true" ]; then
        git push origin --tags
        git push origin
      fi
