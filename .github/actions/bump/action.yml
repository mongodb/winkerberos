name: Bump and Tag
description: "Bump Version and Create Tag"
inputs:
  version:
    description: "The next version to set"
  post_version:
    description: "The post version to set"
  app_id:
    description: "The app id of the bot"
  private_key:
    description: "The private key of the bot"
  grs_username:
    description: "The garasign username"
  grs_password:
    description: "The garasign password"
  gpg_key_id:
    description: "The gpg key id"
  art_user:
    description: "The artifactory username"
  art_password:
    description: "The artifactory password"
  art_image:
    description: "The artifactory image"
  dry_run:
    description: "Whether this is a dry run"

runs:
  using: composite
  steps:
  - uses: actions/create-github-app-token@v1
    id: app-token
    with:
      app-id: ${{ inputs.app_id }}
      private-key: ${{ inputs.app_private_key }}

  - uses: actions/checkout@v4
    with:
      token: ${{ steps.app-token.outputs.token }}

  - uses: actions/setup-python@v4
    with:
      python-version: '3.11'

  - name: Set up Git Config
    shell: bash
    run: |
      # Use the GitHub Actions bot as the actor.
      git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      git config user.name "github-actions[bot]"

  - name: Create the envfile
    shell: bash
    run: |
      pip install -U -q setuptools
      cat << EOF > envfile
      CURRENT_VERSION=$(python setup.py --version)
      NEW_VERSION=${{inputs.version}}
      POST_VERSION=${{inputs.post_version}}
      GRS_CONFIG_USER1_USERNAME=${{ inputs.grs_username }}
      GRS_CONFIG_USER1_PASSWORD=${{ inputs.grs_password }}
      GPG_KEY_ID=${{ inputs.gpg_key_id }}
      EOF

  - name: Log in to artifactory
    uses: redhat-actions/podman-login@v1
    with:
      username: ${{ inputs.art_user }}
      password: ${{ inputs.art_password }}
      registry: artifactory.corp.mongodb.com

  - name: Bump and tag in a container
    shell: bash
    run: |
      podman run \
        --env-file=envfile \
        --rm \
        -v $(pwd):$(pwd) \
        -w $(pwd) \
        ${{ inputs.art_image }} \
        /bin/bash -c "$(pwd)/scripts/bump-and-tag.sh"

  - name: Verify the tag
    shell: bash
    run: |
      curl -O https://pgp.mongodb.com/python-driver.pub
      gpg --import python-driver.pub
      git verify-tag ${{inputs.version}}
      rm python-driver.pub

  - name: Push the version and tags to the source branch
    shell: bash
    run: |
      if [ -n "$(git status --porcelain)" ]; then
        echo "Uncommitted changes!"
        git status --porcelain
        exit 1
      fi
      if [ ${{ inputs.dry_run }} != "true" ]; then
        git push origin --tags
        git push origin
      fi
