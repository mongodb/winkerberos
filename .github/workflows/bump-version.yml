name: Bump Version and Create Tag

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The next version to set"
      post_version:
        description: "The post version to set"

jobs:
  bump-version:
    runs-on: ubuntu-latest
    environment: release
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Git Config
        run: |
          # Use the GitHub Actions bot as the actor.
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

      - name: Create the envfile
        run: |
          pip install -U -q setuptools
          cat << EOF > envfile
          CURRENT_VERSION=$(python setup.py --version)
          NEW_VERSION=${{inputs.version}}
          POST_VERSION=${{inputs.post_version}}
          GRS_CONFIG_USER1_USERNAME=${{ secrets.GRS_CONFIG_USER1_USERNAME }}
          GRS_CONFIG_USER1_PASSWORD=${{ secrets.GRS_CONFIG_USER1_PASSWORD }}
          GPG_KEY_ID=${{ vars.GPG_KEY_ID }}
          EOF

      - name: Log in to artifactory
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.ARTIFACTORY_USER }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          registry: artifactory.corp.mongodb.com

      - name: Bump and tag in a container
        run: |
          podman run \
            --env-file=envfile \
            --rm \
            -v $(pwd):$(pwd) \
            -w $(pwd) \
            ${{ vars.ARTIFACTORY_IMAGE }} \
            /bin/bash -c "$(pwd)/scripts/bump-and-tag.sh"

      - name: Verify the tag
        run: |
          curl -O https://pgp.mongodb.com/python-driver.pub
          gpg --import python-driver.pub
          git verify-tag ${{inputs.version}}
          rm python-driver.pub

      - name: Push the version and tags to the source branch
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "Uncommitted changes!"
            git status --porcelain
            exit 1
          fi
          git push origin --tags
          git push origin
