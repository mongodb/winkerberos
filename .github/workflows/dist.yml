name: Dist

on:
  push:
    branches: [master]
  workflow_dispatch:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
  pull_request:

concurrency:
  group: dist-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -eux {0}

jobs:
  build_wheels:
    name: "Build Wheels ${{ matrix.buildplat }}"
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        buildplat: ["win_amd64", "win32"]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          persist-credentials: false
      - name: Build wheels
        uses: pypa/cibuildwheel@d04cacbc9866d432033b1d09142936e6a0e2121a # v2.23.2
        env:
          CIBW_BUILD: "cp3*-${{ matrix.buildplat }}"
          CIBW_PRERELEASE_PYTHONS: "True"
          CIBW_TEST_COMMAND: "python -c \"import winkerberos;print(winkerberos.__version__)\""

      - name: Assert all versions in wheelhouse
        run: |
          ls wheelhouse/*cp310*.whl
          ls wheelhouse/*cp311*.whl
          ls wheelhouse/*cp312*.whl
          ls wheelhouse/*cp313*.whl
          ls wheelhouse/*cp314*.whl

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.buildplat }}
          path: ./wheelhouse/*.whl

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          persist-credentials: false

      - uses: actions/setup-python@v5
        with:
          # Build sdist on lowest supported Python
          python-version: '3.10'

      - name: Build SDist
        run: |
          pip install check-manifest build
          check-manifest -v
          python -m build --sdist .

      - uses: actions/upload-artifact@v4
        with:
          name: "sdist"
          path: dist/*.tar.gz

  collect_dist:
    runs-on: ubuntu-latest
    needs: [build_wheels, make_sdist]
    name: Download Wheels
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: Flatten directory
        working-directory: .
        run: |
          find . -mindepth 2 -type f -exec mv {} . \;
          find . -type d -empty -delete
      - uses: actions/upload-artifact@v4
        with:
          name: all-dist-${{ github.run_id }}
          path: "./*"
