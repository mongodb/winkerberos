name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The next version to set"
      post_version:
        description: "The post version to set"
      dry_run:
        description: "Whether this is a dry run"
        default: "false"

jobs:
  bump-and-tag:
    environment: release
    runs-on: windows-2019
    steps:
      - uses: ./.github/actions/bump
        with:
          version: ${{ inputs.version }}
          post_version: ${{ inputs.post_version }}
          app_id: ${{ vars.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
          garasign_username: ${{ secrets.GRS_CONFIG_USER1_USERNAME }}
          garasign_password: ${{ secrets.GRS_CONFIG_USER1_PASSWORD }}
          artifactory_username: ${{ secrets.ARTIFACTORY_USER }}
          artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          gpg_key_id: ${{ vars.GPG_KEY_ID }}
          dry_run: ${{ inputs.dry_run }}

  build_dist:
    needs: [bump-and-tag]
    uses: ./.github/dist.yml

  publish:
    needs: [build_dist]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: all-dist-${{ github.run_id }}
          path: dist/
      - name: Get the list of dist files to sign
        run: |
          export dist_files=$(ls dist)
          echo "DIST_FILES=\"${dist_files}\"" >> $GITHUB_ENV
      - uses: mongodb-labs/drivers-github-tools/garasign/ggp-sign@main
        with:
          garasign_username: ${{ secrets.GRS_CONFIG_USER1_USERNAME }}
          garasign_password: ${{ secrets.GRS_CONFIG_USER1_PASSWORD }}
          artifactory_username: ${{ secrets.ARTIFACTORY_USER }}
          artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          filenames: ${{ env.DIST_FILES }}
      - name: Move the signature files to a separate directory
        run: |
            mkdir signatures
            mv dist/*.sig signatures
      - name: Create a draft release with release files
        shell: bash
        if: inputs.dry_run == 'false'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ github.ref_name }} --draft --verify-tag --title ${{ github.ref_name }} --notes ""
          gh release upload ${{ github.ref_name }} signatures/*.sig
      # https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/#publishing-the-distribution-to-pypi
      - name: Publish distribution ðŸ“¦ to PyPI
        if: inputs.dry_run == 'false'
        uses: pypa/gh-action-pypi-publish@release/v1
