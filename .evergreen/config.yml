exec_timeout_secs: 3600

functions:
  "fetch source" :
    - command: git.get_project
      params:
        directory: src
    # Make an evergreen expansion file for the default values
    - command: shell.exec
      params:
        working_dir: "src"
        script: |
           set +x
           # Get the current unique version of this checkout
           if [ "${is_patch}" = "true" ]; then
              CURRENT_VERSION=$(git describe)-patch-${version_id}
           else
              CURRENT_VERSION=latest
           fi

           export DRIVERS_TOOLS="$(dirname $(pwd))/drivers-tools"
           export PROJECT_DIRECTORY="$(pwd)"

           # Python has cygwin path problems on Windows. Detect prospective mongo-orchestration home directory
           if [ "Windows_NT" = "$OS" ]; then # Magic variable in cygwin
              export DRIVERS_TOOLS=$(cygpath -m $DRIVERS_TOOLS)
              export PROJECT_DIRECTORY=$(cygpath -m $PROJECT_DIRECTORY)
           fi

           export MONGO_ORCHESTRATION_HOME="$DRIVERS_TOOLS/.evergreen/orchestration"
           export MONGODB_BINARIES="$DRIVERS_TOOLS/mongodb/bin"
           export UPLOAD_BUCKET="${project}"

           cat <<EOT > expansion.yml
           CURRENT_VERSION: "$CURRENT_VERSION"
           DRIVERS_TOOLS: "$DRIVERS_TOOLS"
           MONGO_ORCHESTRATION_HOME: "$MONGO_ORCHESTRATION_HOME"
           MONGODB_BINARIES: "$MONGODB_BINARIES"
           UPLOAD_BUCKET: "$UPLOAD_BUCKET"
           PROJECT_DIRECTORY: "$PROJECT_DIRECTORY"
           EOT

           cat <<EOT > .env
           CURRENT_VERSION="$CURRENT_VERSION"
           DRIVERS_TOOLS="$DRIVERS_TOOLS"
           MONGO_ORCHESTRATION_HOME="$MONGO_ORCHESTRATION_HOME"
           PROJECT_ORCHESTRATION_HOME="$PROJECT_ORCHESTRATION_HOME"
           MONGODB_BINARIES="$MONGODB_BINARIES"
           UPLOAD_BUCKET="$UPLOAD_BUCKET"
           PROJECT_DIRECTORY="$PROJECT_DIRECTORY"
           EOT

    # Load the expansion file to set the values.
    - command: expansions.update
      params:
        file: src/expansion.yml

  "prepare resources":
    - command: shell.exec
      params:
        script: |
          git clone https://github.com/mongodb-labs/drivers-evergreen-tools.git ${DRIVERS_TOOLS}
          echo "{ \"releases\": { \"default\": \"${MONGODB_BINARIES}\" }}" > ${MONGO_ORCHESTRATION_HOME}/orchestration.config
          # MONGODB_VERSION=latest \
          #   TOPOLOGY=server \
          #   AUTH=auth \
          #   SSL=ssl \
          #   bash ${DRIVERS_TOOLS}/.evergreen/run-orchestration.sh

  "run unit tests":
    - command: subprocess.exec
      type: test
      params:
        working_dir: "src"
        include_expansions_in_env: ["DRIVERS_TOOLS"]
        args:
          - ./.evergreen/run-tests.sh

  "stop mongo-orchestration":
    - command: shell.exec
      params:
        script: |
          ${PREPARE_SHELL}
          set -o xtrace
          bash ${DRIVERS_TOOLS}/.evergreen/stop-orchestration.sh

pre:
  - func: fetch source
  - func: prepare resources

post:
  - func: stop mongo-orchestration
  - command: attach.results
    params:
      file_location: src/results.json

tasks:
- name: run-tests
  commands:
    - func: "run unit tests"

buildvariants:
- name: tests
  display_name: tests
  run_on:
  - windows-64-vsMulti-small
  tasks:
  - name: run-tests
